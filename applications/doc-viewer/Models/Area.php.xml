<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Area.php" path="/Models">
    <totals>
      <lines total="71" comments="15" code="56" executable="13" executed="13" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Models\Area" start="9" executable="13" executed="13" crap="5">
      <namespace name="App\Models"/>
      <method name="processes" signature="processes(): Illuminate\Database\Eloquent\Relations\HasMany" start="25" end="28" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="rootProcesses" signature="rootProcesses(): Illuminate\Database\Eloquent\Relations\HasMany" start="33" end="36" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getStats" signature="getStats(): array" start="41" end="53" crap="1" executable="9" executed="9" coverage="100"/>
      <method name="scopeSearch" signature="scopeSearch($query, $search)" start="58" end="61" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="scopeOrderByName" signature="scopeOrderByName($query, $direction)" start="66" end="69" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="27">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="35">
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
      </line>
      <line nr="43">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="44">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="45">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="48">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="49">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="50">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="51">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="60">
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
      </line>
      <line nr="68">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
      </line>
      <line nr="47">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
      <line nr="52">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Models</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Model</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Relations\HasMany</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Factories\HasFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Area</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Model</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fillable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$casts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'updated_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * Relacionamento com processos</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">processes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasMany</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Process</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * Obter processos raiz (sem parent_id)</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rootProcesses</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasMany</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Process</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">whereNull</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'parent_id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * Obter estat&#xED;sticas da &#xE1;rea</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getStats</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$totalProcesses</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">processes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$activeProcesses</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">processes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'active'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$highCriticality</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">processes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'criticality'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'high'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'total_processes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalProcesses</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'active_processes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$activeProcesses</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'high_criticality'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$highCriticality</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'inactive_processes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalProcesses</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$activeProcesses</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * Scope para buscar por nome</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">scopeSearch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$search</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'like'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">%</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$search</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">%</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * Scope para ordenar por nome</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">scopeOrderByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$direction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'asc'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$direction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71"/>
    </source>
  </file>
</phpunit>
