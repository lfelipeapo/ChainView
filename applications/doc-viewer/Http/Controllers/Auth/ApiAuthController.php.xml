<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ApiAuthController.php" path="/Http/Controllers/Auth">
    <totals>
      <lines total="163" comments="106" code="57" executable="24" executed="24" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Controllers\Auth\ApiAuthController" start="35" executable="24" executed="24" crap="5">
      <namespace name="App\Http\Controllers\Auth"/>
      <method name="login" signature="login(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse" start="73" end="97" crap="3" executable="17" executed="17" coverage="100"/>
      <method name="logout" signature="logout(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse" start="120" end="127" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="user" signature="user(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse" start="156" end="161" crap="1" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="75">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
      </line>
      <line nr="76">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
      </line>
      <line nr="81">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
      </line>
      <line nr="83">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
      </line>
      <line nr="84">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
      </line>
      <line nr="85">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
      </line>
      <line nr="89">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="91">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="92">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="93">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="94">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="95">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="122">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
      </line>
      <line nr="124">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
      </line>
      <line nr="125">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
      </line>
      <line nr="158">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
      </line>
      <line nr="159">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
      </line>
      <line nr="77">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
      </line>
      <line nr="78">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
      </line>
      <line nr="79">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
      </line>
      <line nr="86">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
      </line>
      <line nr="96">
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
      </line>
      <line nr="126">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
      </line>
      <line nr="160">
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Controllers\Auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Controllers\Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Models\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\JsonResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Hash</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Validation\ValidationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @OA\Info(</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> *     title="ChainView API",</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> *     version="1.0.0",</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> *     description="API para gerenciamento de &#xE1;reas e processos",</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> *     @OA\Contact(</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> *         email="admin@chainview.com"</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> *     )</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> * )</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * </token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> * @OA\Server(</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> *     url="http://localhost:8082/api",</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> *     description="Servidor Local"</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * )</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * </token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * @OA\SecurityScheme(</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> *     securityScheme="bearerAuth",</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> *     type="http",</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> *     scheme="bearer",</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> *     bearerFormat="JWT"</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT"> * )</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="35">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApiAuthController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Controller</token>
      </line>
      <line no="36">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * Login via API</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * @OA\Post(</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     *     path="/auth/login",</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     *     summary="Fazer login",</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     *     tags={"Autentica&#xE7;&#xE3;o"},</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     *     @OA\RequestBody(</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     *         required=true,</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     *         @OA\JsonContent(</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     *             required={"email","password","device_name"},</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="email", type="string", format="email", example="admin@chainview.com"),</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="password", type="string", example="admin123"),</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="device_name", type="string", example="web")</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     *         )</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     *     ),</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     *         response=200,</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     *         description="Login realizado com sucesso",</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     *         @OA\JsonContent(</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="message", type="string", example="Login realizado com sucesso!"),</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="token", type="string", example="1|abc123..."),</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="token_type", type="string", example="Bearer"),</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="user", type="object",</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="id", type="integer", example=1),</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="name", type="string", example="Administrador"),</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="email", type="string", example="admin@chainview.com")</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     *             )</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     *         )</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     *     ),</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     *         response=422,</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     *         description="Credenciais inv&#xE1;lidas"</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     *     )</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">login</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required|email'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'device_name'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Hash</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">check</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ValidationException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">withMessages</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'As credenciais fornecidas est&#xE3;o incorretas.'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">device_name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90"/>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Login realizado com sucesso!'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token_type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Bearer'</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98"/>
      <line no="99">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     * Logout via API</token>
      </line>
      <line no="101">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="102">
        <token name="T_DOC_COMMENT">     * @OA\Post(</token>
      </line>
      <line no="103">
        <token name="T_DOC_COMMENT">     *     path="/auth/logout",</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     *     summary="Fazer logout",</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     *     tags={"Autentica&#xE7;&#xE3;o"},</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     *     security={{"bearerAuth":{}}},</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="108">
        <token name="T_DOC_COMMENT">     *         response=200,</token>
      </line>
      <line no="109">
        <token name="T_DOC_COMMENT">     *         description="Logout realizado com sucesso",</token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     *         @OA\JsonContent(</token>
      </line>
      <line no="111">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="message", type="string", example="Logout realizado com sucesso!")</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     *         )</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     *     ),</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     *         response=401,</token>
      </line>
      <line no="116">
        <token name="T_DOC_COMMENT">     *         description="N&#xE3;o autorizado"</token>
      </line>
      <line no="117">
        <token name="T_DOC_COMMENT">     *     )</token>
      </line>
      <line no="118">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="119">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">logout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">currentAccessToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Logout realizado com sucesso!'</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     * Obter usu&#xE1;rio autenticado</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     * @OA\Get(</token>
      </line>
      <line no="133">
        <token name="T_DOC_COMMENT">     *     path="/auth/user",</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">     *     summary="Obter usu&#xE1;rio autenticado",</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">     *     tags={"Autentica&#xE7;&#xE3;o"},</token>
      </line>
      <line no="136">
        <token name="T_DOC_COMMENT">     *     security={{"bearerAuth":{}}},</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">     *         response=200,</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">     *         description="Dados do usu&#xE1;rio autenticado",</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     *         @OA\JsonContent(</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     *             @OA\Property(property="user", type="object",</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="id", type="integer", example=1),</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="name", type="string", example="Administrador"),</token>
      </line>
      <line no="144">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="email", type="string", example="admin@chainview.com"),</token>
      </line>
      <line no="145">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="created_at", type="string", format="date-time"),</token>
      </line>
      <line no="146">
        <token name="T_DOC_COMMENT">     *                 @OA\Property(property="updated_at", type="string", format="date-time")</token>
      </line>
      <line no="147">
        <token name="T_DOC_COMMENT">     *             )</token>
      </line>
      <line no="148">
        <token name="T_DOC_COMMENT">     *         )</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">     *     ),</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">     *     @OA\Response(</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     *         response=401,</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     *         description="N&#xE3;o autorizado"</token>
      </line>
      <line no="153">
        <token name="T_DOC_COMMENT">     *     )</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="162">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163"/>
    </source>
  </file>
</phpunit>
