<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ApiResponseMiddleware.php" path="/Http/Middleware">
    <totals>
      <lines total="54" comments="12" code="42" executable="17" executed="17" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Middleware\ApiResponseMiddleware" start="9" executable="17" executed="17" crap="7">
      <namespace name="App\Http\Middleware"/>
      <method name="handle" signature="handle(Illuminate\Http\Request $request, Closure $next)" start="18" end="52" crap="7" executable="17" executed="17" coverage="100"/>
    </class>
    <coverage>
      <line nr="20">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="23">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="24">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="27">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="29">
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
      </line>
      <line nr="30">
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
      </line>
      <line nr="32">
        <covered by="Tests\Feature\AreaTest::can_create_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_without_name"/>
        <covered by="Tests\Feature\AreaTest::cannot_create_area_with_duplicate_name"/>
        <covered by="Tests\Feature\AreaTest::can_update_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::can_delete_area_when_authenticated"/>
        <covered by="Tests\Feature\AreaTest::cannot_delete_area_with_associated_processes"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_login_with_valid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_cannot_login_with_nonexistent_email"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_email_and_password"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::login_requires_valid_email_format"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_logout"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_api_overview_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_create_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_create_subprocess_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_without_required_fields"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_area"/>
        <covered by="Tests\Feature\ProcessTest::cannot_create_process_with_invalid_parent"/>
        <covered by="Tests\Feature\ProcessTest::can_update_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::can_delete_process_when_authenticated"/>
        <covered by="Tests\Feature\ProcessTest::cannot_delete_process_with_children"/>
      </line>
      <line nr="36">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="37">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="39">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="40">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="41">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="47">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="48">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="51">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
      <line nr="43">
        <covered by="Tests\Feature\AreaTest::can_list_areas"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_search"/>
        <covered by="Tests\Feature\AreaTest::can_list_areas_with_pagination"/>
        <covered by="Tests\Feature\AreaTest::can_get_specific_area"/>
        <covered by="Tests\Feature\AreaTest::can_get_areas_tree"/>
        <covered by="Tests\Feature\AreaTest::can_get_processes_tree_for_area"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::authenticated_user_can_get_their_profile"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_protected_routes_with_valid_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_public_routes_without_token"/>
        <covered by="Tests\Feature\Auth\ApiAuthTest::user_can_access_health_check_without_token"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes"/>
        <covered by="Tests\Feature\ProcessTest::can_list_processes_with_filters"/>
        <covered by="Tests\Feature\ProcessTest::can_get_specific_process"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_tree"/>
        <covered by="Tests\Feature\ProcessTest::can_get_process_stats"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_status"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_criticality"/>
        <covered by="Tests\Feature\ProcessTest::can_filter_processes_by_area"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Middleware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\JsonResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApiResponseMiddleware</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT">     * Handle an incoming request.</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * @param  \Illuminate\Http\Request  $request</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * @param  \Closure  $next</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Se for uma resposta JSON, padronizar o formato</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Se j&#xE1; tem estrutura de API (success, message, data), n&#xE3;o modificar</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Apenas garantir charset UTF-8</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json; charset=utf-8'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Se n&#xE3;o tiver estrutura padronizada, adicionar</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$statusCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getStatusCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$isSuccess</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statusCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statusCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">300</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isSuccess</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'data'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timestamp'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">now</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toISOString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Garantir charset UTF-8</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json; charset=utf-8'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
    </source>
  </file>
</phpunit>
