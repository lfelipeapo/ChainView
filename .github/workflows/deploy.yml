name: Deploy Pages

on:
  push:
    branches: [ main ]

# Configurar permissões para o workflow
permissions:
  contents: read
  pages: write
  id-token: write

# Configurar ambiente para GitHub Pages
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Build do frontend
      - name: Install dependencies
        working-directory: frontend
        run: npm ci || (rm -rf node_modules package-lock.json && npm install)

      - name: Build frontend
        working-directory: frontend
        run: npm run build
        env:
          NODE_ENV: production
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://lfelipeapo.github.io/ChainView/api' }}

      # SPA fallback para React Router
      - name: SPA fallback 404
        run: cp frontend/dist/index.html frontend/dist/404.html

      # Criar .nojekyll para evitar processamento do Jekyll
      - name: Create .nojekyll
        run: touch frontend/dist/.nojekyll

      # Copiar documentação estática (se existir)
      - name: Copy static docs
        run: |
          mkdir -p frontend/dist/docs
          cp -r docs/* frontend/dist/docs/ 2>/dev/null || true
          cp README.md frontend/dist/docs/ 2>/dev/null || true

      # Publica em GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './frontend/dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
